// // App.js
// import { useState, useEffect } from "react";
// import questions from "./questions";
// import "./App.css";

// function App() {
//   const [currentQuestion, setCurrentQuestion] = useState(0);
//   const [scores, setScores] = useState({ player1: 0, player2: 0 });
//   const [timeLeft, setTimeLeft] = useState(15);
//   const [selectedAnswers, setSelectedAnswers] = useState({});
//   const [gameStarted, setGameStarted] = useState(false);
//   const [gameOver, setGameOver] = useState(false);

//   // Timer effect
//   useEffect(() => {
//     if (gameStarted && !gameOver && timeLeft > 0) {
//       const timer = setInterval(() => {
//         setTimeLeft((prev) => prev - 1);
//       }, 1000);
//       return () => clearInterval(timer);
//     } else if (timeLeft === 0) {
//       handleNextQuestion();
//     }
//   }, [gameStarted, timeLeft, gameOver]);

//   const handleAnswer = (player, answer) => {
//     if (selectedAnswers[player]) return;

//     const isCorrect = answer === questions[currentQuestion].correctAnswer;
//     setSelectedAnswers((prev) => ({ ...prev, [player]: answer }));

//     if (isCorrect) {
//       setScores((prev) => ({ ...prev, [player]: prev[player] + 1 }));
//     }
//   };

//   const handleNextQuestion = () => {
//     if (currentQuestion < questions.length - 1) {
//       setCurrentQuestion((prev) => prev + 1);
//       setTimeLeft(15);
//       setSelectedAnswers({});
//     } else {
//       setGameOver(true);
//     }
//   };

//   const startGame = () => {
//     setGameStarted(true);
//   };

//   return (
//     <div className="app">
//       {!gameStarted ? (
//         <div className="start-screen">
//           <h1>Multiplayer Quiz</h1>
//           <button onClick={startGame}>Start Game</button>
//         </div>
//       ) : gameOver ? (
//         <div className="results">
//           <h2>Game Over!</h2>
//           <p>Player 1 Score: {scores.player1}</p>
//           <p>Player 2 Score: {scores.player2}</p>
//           <p>
//             {scores.player1 === scores.player2
//               ? "It's a tie!"
//               : `Winner: Player ${scores.player1 > scores.player2 ? 1 : 2}`}
//           </p>
//         </div>
//       ) : (
//         <div className="game-container">
//           <div className="header">
//             <h2>
//               Question {currentQuestion + 1} of {questions.length}
//             </h2>
//             <div className="timer">Time Left: {timeLeft}s</div>
//           </div>

//           <div className="question-section">
//             <h3>{questions[currentQuestion].question}</h3>
//             <div className="options-grid">
//               {questions[currentQuestion].options.map((option, index) => (
//                 <div key={index} className="option-container">
//                   <button
//                     className={`option ${
//                       selectedAnswers.player1 === option ? "selected" : ""
//                     }`}
//                     onClick={() => handleAnswer("player1", option)}
//                     disabled={!!selectedAnswers.player1}
//                   >
//                     {option}
//                   </button>
//                   <button
//                     className={`option ${
//                       selectedAnswers.player2 === option ? "selected" : ""
//                     }`}
//                     onClick={() => handleAnswer("player2", option)}
//                     disabled={!!selectedAnswers.player2}
//                   >
//                     {option}
//                   </button>
//                 </div>
//               ))}
//             </div>
//           </div>

//           <div className="scores">
//             <div>Player 1: {scores.player1}</div>
//             <div>Player 2: {scores.player2}</div>
//           </div>
//         </div>
//       )}
//     </div>
//   );
// }

// export default App;